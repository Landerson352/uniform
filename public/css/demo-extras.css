/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}
/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block;
}
/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}
/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}
/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}
/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}
/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}
/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}
/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}
/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}
/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}
/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}
/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}
/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}
/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}
/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}
/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}
/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}
/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}
/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}
/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}
/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}
/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}
/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}
/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}
/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}
/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}
/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
* {
  box-sizing: border-box;
}
html,
body {
  height: 100%;
}
html {
  width: 100vw;
}
@media screen and (max-width:639px) {
  html {
    font-size: 0.3125vw;
  }
}
@media screen and (min-width:640px) and (max-width:959px) {
  html {
    font-size: 0.15625vw;
  }
}
@media screen and (min-width:960px) and (max-width:1279px) {
  html {
    font-size: 0.10416667vw;
  }
}
@media screen and (min-width:1280px) and (max-width:1919px) {
  html {
    font-size: 0.078125vw;
  }
}
@media screen and (min-width:1920px) {
  html {
    font-size: 0.05208333vw;
  }
}
body {
  min-height: 100%;
  overflow-x: hidden;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%;
  font-size: 16rem;
}
.page {
  min-height: 100%;
  overflow-x: hidden;
}
.container {
  position: relative;
}
.visible-xs,
.visible-sm,
.visible-md,
.visible-lg,
.visible-xl {
  display: none !important;
}
.visible-xs-block,
.visible-sm-block,
.visible-md-block,
.visible-lg-block,
.visible-xl-block,
.visible-xs-inline,
.visible-sm-inline,
.visible-md-inline,
.visible-lg-inline,
.visible-xl-inline,
.visible-xs-inline-block,
.visible-sm-inline-block,
.visible-md-inline-block,
.visible-lg-inline-block,
.visible-xl-inline-block {
  display: none !important;
}
@media screen and (max-width:639px) {
  .visible-xs {
    display: block !important;
  }
  table.visible-xs {
    display: table !important;
  }
  tr.visible-xs {
    display: table-row !important;
  }
  th.visible-xs,
  td.visible-xs {
    display: table-cell !important;
  }
  .visible-xs-block {
    display: block !important;
  }
  .visible-xs-inline {
    display: inline !important;
  }
  .visible-xs-inline-block {
    display: inline-block !important;
  }
  .hidden-xs {
    display: none !important;
  }
}
@media screen and (min-width:640px) and (max-width:959px) {
  .visible-sm {
    display: block !important;
  }
  table.visible-sm {
    display: table !important;
  }
  tr.visible-sm {
    display: table-row !important;
  }
  th.visible-sm,
  td.visible-sm {
    display: table-cell !important;
  }
  .visible-sm-block {
    display: block !important;
  }
  .visible-sm-inline {
    display: inline !important;
  }
  .visible-sm-inline-block {
    display: inline-block !important;
  }
  .hidden-sm {
    display: none !important;
  }
}
@media screen and (min-width:960px) and (max-width:1279px) {
  .visible-md {
    display: block !important;
  }
  table.visible-md {
    display: table !important;
  }
  tr.visible-md {
    display: table-row !important;
  }
  th.visible-md,
  td.visible-md {
    display: table-cell !important;
  }
  .visible-md-block {
    display: block !important;
  }
  .visible-md-inline {
    display: inline !important;
  }
  .visible-md-inline-block {
    display: inline-block !important;
  }
  .hidden-md {
    display: none !important;
  }
}
@media screen and (min-width:1280px) and (max-width:1919px) {
  .visible-lg {
    display: block !important;
  }
  table.visible-lg {
    display: table !important;
  }
  tr.visible-lg {
    display: table-row !important;
  }
  th.visible-lg,
  td.visible-lg {
    display: table-cell !important;
  }
  .visible-lg-block {
    display: block !important;
  }
  .visible-lg-inline {
    display: inline !important;
  }
  .visible-lg-inline-block {
    display: inline-block !important;
  }
  .hidden-lg {
    display: none !important;
  }
}
@media screen and (min-width:1920px) {
  .visible-xl {
    display: block !important;
  }
  table.visible-xl {
    display: table !important;
  }
  tr.visible-xl {
    display: table-row !important;
  }
  th.visible-xl,
  td.visible-xl {
    display: table-cell !important;
  }
  .visible-xl-block {
    display: block !important;
  }
  .visible-xl-inline {
    display: inline !important;
  }
  .visible-xl-inline-block {
    display: inline-block !important;
  }
  .hidden-xl {
    display: none !important;
  }
}
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-lowercase {
  text-transform: lowercase;
}
.text-uppercase {
  text-transform: uppercase;
}
.text-captialize {
  text-transform: capitalize;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td {
  padding: 8rem;
  border-bottom: 1px solid #666;
}
td.success {
  color: #393;
  background: #dfd;
  border-color: rgba(51, 153, 51, 0.1);
}
td.error {
  color: #933;
  background: #fdd;
  border-color: rgba(153, 51, 51, 0.1);
}
.flex-grid {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
}
.even-row {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row;
      -ms-flex-flow: row;
          flex-flow: row;
}
.even-row > * {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}
.even-column {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column;
      -ms-flex-flow: column;
          flex-flow: column;
}
.even-column > * {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}
html {
  font-family: 'Open Sans', sans-serif;
  font-weight: 300;
}
.hero {
  background-color: black;
  background-position: center center;
  background-size: cover;
  background-image: url("../img/hero1.png");
  width: auto;
  height: 39.58333333vw;
  color: #FBF59D;
  margin-bottom: 100rem;
}
@media screen and (max-width:639px) {
  .hero {
    height: 75vw;
  }
}
@media screen and (min-width:640px) and (max-width:959px) {
  .hero {
    height: 50vw;
  }
}
@media screen and (min-width:1280px) and (max-width:1919px) {
  .hero {
    height: 32.8125vw;
  }
}
@media screen and (min-width:1920px) {
  .hero {
    height: 25vw;
  }
}
.hero:before {
  content: "";
  display: block;
  -webkit-transform: translate(-50%, 0%);
      -ms-transform: translate(-50%, 0%);
          transform: translate(-50%, 0%);
  position: absolute;
  left: 50%;
  top: 100%;
  width: 140rem;
  height: 160rem;
  background: #eee;
}
.hero-title {
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  position: absolute;
  left: 50%;
  top: 50%;
  width: 100%;
  height: auto;
  text-transform: uppercase;
  text-align: center;
  font-size: 5vw;
  letter-spacing: 0.5em;
}
.hero-title:before {
  content: "";
  display: block;
  z-index: -1;
  width: 0;
  height: 0;
  border-width: 0.83333333vw;
  border-style: solid;
  border-color: transparent;
  border-bottom-color: #FBF59D;
  border-left-color: #FBF59D;
  -webkit-transform: translate(0%, -100%);
      -ms-transform: translate(0%, -100%);
          transform: translate(0%, -100%);
  position: absolute;
  left: 86%;
  top: 10%;
}
.hero-profile {
  -webkit-transform: translate(-50%, -50%) rotate(10deg);
      -ms-transform: translate(-50%, -50%) rotate(10deg);
          transform: translate(-50%, -50%) rotate(10deg);
  position: absolute;
  left: 50%;
  top: 100%;
  width: 160rem;
  height: 160rem;
  border-radius: 50%;
  overflow: hidden;
}
.responsive-helpers-table {
  width: 280rem;
  height: auto;
  border-radius: 5rem;
  overflow: hidden;
  text-align: center;
  position: relative;
  margin: 0 auto;
}
.flex-grid-demo {
  margin: 40rem 0;
}
.component {
  width: 320rem;
  min-height: 160rem;
  padding: 20rem;
  border: 2rem solid white;
  background: #eee;
}
.even-grid-demo {
  background-color: black;
  background-position: center center;
  background-size: cover;
  background-image: url("../img/hero1.png");
  margin: 40rem 0;
}
.even-grid-demo,
.even-grid-demo * {
  outline-offset: -1rem;
  outline: 1rem solid white;
  min-height: 9.375vw;
}
@media screen and (max-width:639px) {
  .even-grid-demo,
  .even-grid-demo * {
    display: block;
    min-height: 12.5vw;
  }
}
.even-grid-demo .color-1 {
  background: rgba(251, 245, 157, 0.8);
}
.even-grid-demo .color-2 {
  background: rgba(255, 255, 255, 0.1);
}
.even-grid-demo .color-3 {
  background: rgba(255, 255, 255, 0.3);
}
.even-grid-demo .color-4 {
  background: #ffffff;
}
.even-grid-demo .color-2,
.even-grid-demo .color-3,
.even-grid-demo .color-5 {
  color: white;
}
.even-grid-demo .color-1,
.even-grid-demo .color-2,
.even-grid-demo .color-3,
.even-grid-demo .color-4,
.even-grid-demo .color-5 {
  padding: 8rem;
}

/*# sourceMappingURL=data:application/json;base64, */
